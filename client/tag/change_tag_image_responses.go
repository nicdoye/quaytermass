// Code generated by go-swagger; DO NOT EDIT.

package tag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/nicdoye/quaytermass/models"
)

// ChangeTagImageReader is a Reader for the ChangeTagImage structure.
type ChangeTagImageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChangeTagImageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewChangeTagImageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewChangeTagImageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewChangeTagImageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewChangeTagImageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewChangeTagImageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewChangeTagImageOK creates a ChangeTagImageOK with default headers values
func NewChangeTagImageOK() *ChangeTagImageOK {
	return &ChangeTagImageOK{}
}

/*ChangeTagImageOK handles this case with default header values.

Successful invocation
*/
type ChangeTagImageOK struct {
}

func (o *ChangeTagImageOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/repository/{repository}/tag/{tag}][%d] changeTagImageOK ", 200)
}

func (o *ChangeTagImageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeTagImageBadRequest creates a ChangeTagImageBadRequest with default headers values
func NewChangeTagImageBadRequest() *ChangeTagImageBadRequest {
	return &ChangeTagImageBadRequest{}
}

/*ChangeTagImageBadRequest handles this case with default header values.

Bad Request
*/
type ChangeTagImageBadRequest struct {
	Payload *models.APIError
}

func (o *ChangeTagImageBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v1/repository/{repository}/tag/{tag}][%d] changeTagImageBadRequest  %+v", 400, o.Payload)
}

func (o *ChangeTagImageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeTagImageUnauthorized creates a ChangeTagImageUnauthorized with default headers values
func NewChangeTagImageUnauthorized() *ChangeTagImageUnauthorized {
	return &ChangeTagImageUnauthorized{}
}

/*ChangeTagImageUnauthorized handles this case with default header values.

Session required
*/
type ChangeTagImageUnauthorized struct {
	Payload *models.APIError
}

func (o *ChangeTagImageUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1/repository/{repository}/tag/{tag}][%d] changeTagImageUnauthorized  %+v", 401, o.Payload)
}

func (o *ChangeTagImageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeTagImageForbidden creates a ChangeTagImageForbidden with default headers values
func NewChangeTagImageForbidden() *ChangeTagImageForbidden {
	return &ChangeTagImageForbidden{}
}

/*ChangeTagImageForbidden handles this case with default header values.

Unauthorized access
*/
type ChangeTagImageForbidden struct {
	Payload *models.APIError
}

func (o *ChangeTagImageForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/repository/{repository}/tag/{tag}][%d] changeTagImageForbidden  %+v", 403, o.Payload)
}

func (o *ChangeTagImageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeTagImageNotFound creates a ChangeTagImageNotFound with default headers values
func NewChangeTagImageNotFound() *ChangeTagImageNotFound {
	return &ChangeTagImageNotFound{}
}

/*ChangeTagImageNotFound handles this case with default header values.

Not found
*/
type ChangeTagImageNotFound struct {
	Payload *models.APIError
}

func (o *ChangeTagImageNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/repository/{repository}/tag/{tag}][%d] changeTagImageNotFound  %+v", 404, o.Payload)
}

func (o *ChangeTagImageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
